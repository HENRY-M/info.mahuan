---
layout:      post
title:       "在GitHub上搭建博客网站"
subtitle:    "在Linux(CentOS)系统上搭建简单的博客写作环境"
description: "在GitHub搭建一个静态博客，首先需要一个基本的博客写作环境，本篇文章记录了博主使用CentOS+GitHub+Git+Markdown+Jekyll套件搭建写作环境的详细过程。"
date:        2015-07-01 20:20:00
author:      "雨叩晨曦"
header-img:  "img/post/15070101-head.jpg"
sid:         "15070101"
---

*本文欢迎转载，请保留作者名称及原文链接，谢谢*

---

一个理想的GitHub博客的写作环境包括 GitHub + Git + Markdown + Jekyll。这里博主写作用的操作系统选择了CentOS6.6 X64 最小化安装的版本，运行于VirtualBox虚拟机上。因为我也没有在其他操作系统试验过，所以我只能说这一系列文章的基础也是基于CentOS6.6 X64操作系统之上的。废话不多说，下面开始罗列环境的搭建过程。

### 1. GitHub准备。

GitHub为了方便其用户管理和展示自己的软件项目，为用户提供了GitHub Pages功能。该功能允许用户在GitHub上搭建一个静态网站并能够绑定独立的域名。到[GitHub官方网站](https://github.com)注册一个帐号，注册完成并登录后，创建一个公开的Repository（这里我起的名字就是[info.mahuan](https://github.com/HENRY-M/info.mahuan)），这个用于我们存放博客源代码。到此，我们的GitHub环境就设置完成了。

### 2. 本地安装Git。

由于Git在开源世界的普及程度，各大Linux软件源都会提供Git软件包，但是用过的同学们就会发现，这些源里提供的Git客户端的版本都比较老旧。因此，这里我介绍一下通过源码安装新版本的步骤：

#### 2.1 通过下面命令安装Git软件包依赖

	yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel
	yum install gcc
	yum install perl-ExtUtils-CBuilder perl-ExtUtils-MakeMaker

#### 2.2 下载最新的Git源码

访问[GIT客户端下载地址](https://www.kernel.org/pub/software/scm/git)，下载最新的gz包。

#### 2.3 解压下载的压缩包并浏览到源码目录，执行如下命令编译安装

	./configure --prefix=/usr/local/git --with-curl --with-expat --with-openssl
	make
	make install

#### 2.4 配置环境变量

编辑Linux的/etc/profile文件，在文件末尾添加如下代码

	#GIT ENV
	GIT_HOME=/usr/local/git
	export GIT_HOME
	PATH=$GIT_HOME/bin:$PATH
	PATH=$GIT_HOME/libexec/git-core:$PATH
	export PATH

保存后执行下面命令使配置生效

	source /etc/profile

#### 2.5 查看是否安装成功,可以使用如下命令

	git --version

如果显示类似下面的内容则表示安装成功

	git version 2.4.5

到这里，GIT客户端就安装完成了。

### 3. 安装Jekyll

Jekyll是依赖于Ruby运行的。所以这里先安装Ruby,又考虑到Ruby网站经常被墙的原因，则使用如下方式比较简单省力气。

#### 3.1 安装Ruby版本管理器RVM

	curl -sSL https://rvm.io/mpapis.asc | gpg2 --import -
	curl -L get.rvm.io | bash -s stable

执行完上面两步且不报错后，退出命令窗口并打开一个新窗口，执行

	rvm -v

检查RVM是否安装成功。成功则显示类似如下信息

	rvm 1.26.11 (latest) by Wayne E. Seguin <wayneeseguin@gmail.com>, Michal Papis <mpapis@gmail.com> [https://rvm.io/]

#### 3.2 安装RUBY

使用RVM安装则方便的多，执行如下命令查看当前RUBY的版本列表

	rvm list known

得到如下执行结果

	# MRI Rubies
	[ruby-]1.8.6[-p420]
	[ruby-]1.8.7[-head] # security released on head
	[ruby-]1.9.1[-p431]
	[ruby-]1.9.2[-p330]
	[ruby-]1.9.3[-p551]
	[ruby-]2.0.0[-p643]
	[ruby-]2.1.4
	[ruby-]2.1[.5]
	[ruby-]2.2[.1]
	[ruby-]2.2-head
	ruby-head
	......

从上述列出的版本中选取最新版本（比如2.2.1）并执行

	rvm install 2.2.1

安装完成后继续安装相关文档

	rvm docs generate-ri

如果没有报错，则到这一步，RUBY安装完成了

#### 3.3 安装Jekyll

Ruby自带的GEM配置的软件源当然是官方的，但是由于一些众所周知的原因，该软件源经常无法访问，于是需要采用如下步骤替换。这里感谢taobao.org。

查看当前软件源：

	gem sources -l

可以看到当前的源是

	https://rubygems.org/

注意，如果是其他源的话，请一并删除，使用如下命令

	gem sources --remove https://rubygems.org/

添加taobao.org的RUBY源，使用如下命令

	gem sources -a https://ruby.taobao.org/

重新查看当前源（如果有taobao.org之外的其他源，请使用上面命令删除,即需要确保当前源只有taobao.org，原因请查看 [*这里*](https://ruby.taobao.org/)）

现在就可以执行如下命令安装Jekyll了。

	gem install jekyll

#### 3.4 安装Node.js

jekyll需要Javascript运行时环境，这里我们使用node.js,为了保持最新版本，我们同样使用源码安装。下载node.js，访问node.js官网，[*连接*](https://nodejs.org/download/)，找到最新版本并下载。下载完成后解压到目录（如果没有该目录，则新建该目录）/usr/local/nodejs/，如下：

	/usr/local/nodejs/node-v0.12.7-linux-x64/

配置环境变量，编辑CentOS系统文件: /etc/profile，添加如下配置：

	#NODE.JS ENV
	
	NODEJS_HOME=/usr/local/nodejs/node-v0.12.7-linux-x64
	export NODEJS_HOME
	
	PATH=$NODEJS_HOME/bin:$PATH
	export PATH

执行如下命令，使配置生效（如果觉得不好用，可重启系统）

	source /etc/profile

执行如下命令，查看是否安装成功

	node -v

如果显示如下，则代表安装成功

	v0.12.7

### 4. 小试牛刀

到这一步，整个写作环境就搭建完成了。下面通过几行代码来完成一个简单的博客。

#### 4.1 创建一个文件夹作为工作空间

	mkdir -p /home/mahuan/openwork/
	cd /home/mahuan/openwork/

#### 4.2 创建博客

	jekyll new info.mahuan

#### 4.3 浏览到博客目录

	cd info.mahuan

#### 4.4 初始化Git

GitHub规定Pages的目录必须使用分支 gh-pages，在这个分支下的文件才会被GitHub编译成网页并发布，所以这里创建一个没有父类的分支。命令如下

	git init
	git checkout --orphan gh-pages

Git首先要做一些基本的配置。使用如下命令配置用户名和邮箱

        git config --global user.name 你的用户名
        git config --global user.email 你的邮箱

#### 4.5 提交博客代码

	git add .
	git commit -m "my first blog"
	git remote add origin https://github.com/HENRY-M/info.mahuan.git
	git push origin gh-pages

如果执行上面命令时报如下错误

        fatal: unable to auto-detect email address

首先使用命令【ls -al】检查当前用户目录下（如果是root用户，则检查/root/目录，如果是其他用户，则检查/home/用户名/）是否存在文件【.gitconfig】。如果存在，则检查文件内容中的user节点配置的数据是否正确，比方如下：

        [user]
                name = HENRY.M
                email = email@youremail.com

如果信息错误，则可直接编辑该文件，修改成正确的用户名和邮箱。如果不存在该文件，则使用如下命令创建文件并将上述内容复制到文件中保存即可。

        touch .gitconfig

注意第三步的URL，一定要换成在本文开始GitHub环境准备一节里创建的Repository地址。比如我的就是 https://github.com/HENRY-M/info.mahuan

#### 4.6 验证结果

好了，等几分钟后，访问一下地址 http://HENRY-M.github.io/info.mahuan（请把用户名和项目名称换成自己的）, 就会发现博客已经生成了。


### 5. 写作环境

最后看一下写作环境。文章在写完之前我们是不希望直接发布到博客站上去的，所以需要一个本地写作的预览环境。

#### 5.1 文章预览

将命令窗口目录浏览到博客代码的根目录info.mahuan。然后执行下面的命令：

        jekyll serve -w --host=0.0.0.0

执行上述命令后，Jekyll服务会启动，从执行完的输出结果看，系统是在4000端口启动。现在在浏览器中访问一下http://IP:4000端口，就能整个看到博客站内容了。其中,w参数代表监听工程文件的变动，发现后自动编译发布。host参数则指定了访问的IP地址，默认只能本机访问，如果指定为0.0.0.0，则代表允许任意IP访问。

#### 5.2 文章编写

由于使用了较为简单的MARKDOWN语法，所以可以直接在文本编辑器进行编辑。也可以使用一些支持MARKDOWN语法的编辑器或者插件。这里我就不多做介绍了。下面列出了一些我用的工具。

* [在线Markdown编辑器-markdown-editor](https://github.com/jbt/markdown-editor)。

---

#### 相关博文

{% include article/bucket-blog.html %}
